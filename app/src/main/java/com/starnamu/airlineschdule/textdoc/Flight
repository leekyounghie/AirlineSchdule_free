//비행기 이동

/* Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                boolean isNow = true;


                while (isNow) {

                    handler.post(new Runnable() {
                        @Override
                        public void run() {
                            marker.setPosition(latLng);
                            marker.setRotation(Azimuth + 20);
                        }
                    });//handler

                    i++;

                    LastLatitude = Latitude;
                    LastLongitude = Longitude;
                    Latitude = Latitude + 0.005;
                    Longitude = Longitude + 0.005;
                    latLng = new LatLng(Latitude, Longitude);

                    LatLonConversion latLonConversion = new LatLonConversion();
                    //(double P1_latitude, double P1_longitude, double P2_latitude, double P2_longitude)
                    Azimuth = latLonConversion.bearingP1toP2(LastLatitude, LastLongitude, Latitude, Longitude);


                    try {
                        Thread.sleep(500);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }//run()
        });//Thread

        thread.start();*/




 //비행기 (이미지) 리싸이즈 하는 메소드
 public Bitmap getResizedBitmap(Bitmap bm, int newWidth, int newHeight) {
        int width = bm.getWidth();
        int height = bm.getHeight();
        float scaleWidth = ((float) newWidth) / width;
        float scaleHeight = ((float) newHeight) / height;
        // CREATE A MATRIX FOR THE MANIPULATION
        Matrix matrix = new Matrix();
        // RESIZE THE BIT MAP
        matrix.postScale(scaleWidth, scaleHeight);

        // "RECREATE" THE NEW BITMAP
        Bitmap resizedBitmap = Bitmap.createBitmap(
                bm, 0, 0, width, height, matrix, false);
        return resizedBitmap;
    }